main :: fn () {
    a: u8 = 4;
    b: u8 = 4;
    c: u8 = 4;

    d: u8 = 4;
    e: u8 = 4;
    f: u8 = 4;

    g: u8 = 4;
    h: u8 = 4;
    i: u8 = 4;

    j: u8 = 4;
    k: u8 = 4;
    l: u8 = 4;

    m: u8 = 4;
    n: u8 = 4;

    if (a == b) {
        if (c == d) {
            if (e == f) {
                if (g == h) {
                    if (i == j) {
                        if (k == l) {
                            if (m == n) {
                                if (c == d) {
                                    if (e == f) {
                                        if (g == h) {
                                            if (i == j) {
                                                if (k == l) {
                                                    if (m == n) {
                                                        if (a == b) {
                                                            if (c == d) {
                                                                if (e == f) {
                                                                    if (g == h) {
                                                                        if (i == j) {
                                                                            if (k == l) {
                                                                                if (m == n) {
                                                                                    if (c == d) {
                                                                                        if (e == f) {
                                                                                            if (g == h) {
                                                                                                if (i == j) {
                                                                                                    if (k == l) {
                                                                                                        if (m == n) {
                                                                                                        } else {
                                                                                                        }
                                                                                                    } else {
                                                                                                    }
                                                                                                } else {
                                                                                                }
                                                                                            } else {
                                                                                            }
                                                                                        } else {
                                                                                        }
                                                                                    } else {
                                                                                    }
                                                                                } else {
                                                                                }
                                                                            } else {
                                                                            }
                                                                        } else {
                                                                        }
                                                                    } else {
                                                                    }
                                                                } else {
                                                                }
                                                            } else {
                                                            }
                                                        } else {
                                                        }
                                                    } else {
                                                    }
                                                } else {
                                                }
                                            } else {
                                            }
                                        } else {
                                        }
                                    } else {
                                    }
                                } else {
                                }
                            } else {
                            }
                        } else {
                        }
                    } else {
                    }
                } else {
                }
            } else {
            }
        } else {
        }
    } else {
    }
}
