fn main() {
    var a u8 = 4;
    var b u8 = 4;
    var c u8 = 4;

    var d u8 = 4;
    var e u8 = 4;
    var f u8 = 4;

    var g u8 = 4;
    var h u8 = 4;
    var i u8 = 4;

    var j u8 = 4;
    var k u8 = 4;
    var l u8 = 4;

    var m u8 = 4;
    var n u8 = 4;

    // Too much nesting produces a lot of unexpected behaviours by the compiler
    if (a == b) {
        if (c == d) {
            if (e == f) {
                if (g == h) {
                    if (i == j) {
                        if (k == l) {
                            if (m == n) {
                                if (c == d) {
                                    if (e == f) {
                                        if (g == h) {
                                            if (i == j) {
                                                if (k == l) {
                                                    if (m == n) {
                                                        if (a == b) {
                                                            if (c == d) {
                                                                if (e == f) {
                                                                    if (g == h) {
                                                                        if (i == j) {
                                                                            if (k == l) {
                                                                                if (m == n) {
                                                                                    if (c == d) {
                                                                                        if (e == f) {
                                                                                            if (g == h) {
                                                                                                if (i == j) {
                                                                                                    if (k == l) {
                                                                                                        if (m == n) {
                                                                                                        } else {
                                                                                                        }
                                                                                                    } else {
                                                                                                    }
                                                                                                } else {
                                                                                                }
                                                                                            } else {
                                                                                            }
                                                                                        } else {
                                                                                        }
                                                                                    } else {
                                                                                    }
                                                                                } else {
                                                                                }
                                                                            } else {
                                                                            }
                                                                        } else {
                                                                        }
                                                                    } else {
                                                                    }
                                                                } else {
                                                                }
                                                            } else {
                                                            }
                                                        } else {
                                                        }
                                                    } else {
                                                    }
                                                } else {
                                                }
                                            } else {
                                            }
                                        } else {
                                        }
                                    } else {
                                    }
                                } else {
                                }
                            } else {
                            }
                        } else {
                        }
                    } else {
                    }
                } else {
                }
            } else {
            }
        } else {
        }
    } else {
    }
}
