// TODO: We don't support slices yet
fn strlen(str [*]const u8) usize {
    var len usize = 0;

    while str[len] != 0 {
        len = len + 1;
    }

    return len;
}

type SYS = enum usize {
    write = 1,
};

fn syscall3(code SYS, arg1 usize, arg2 usize, arg3 usize) usize {
    return asm {
        "syscall"
        : "={rax}" (usize)
        : "{rax}" (code),
          "{rdi}" (arg1),
          "{rsi}" (arg2),
          "{rdx}" (arg3),
        : "rcx", "r11", "memory"
    };
}

const STDOUT = 1;

fn print(str [*]const u8) {
    syscall3(SYS::write, STDOUT, str as usize, strlen(str));
}

fn main() {
    var i i32 = 0;

    while (i = i + 1) < 16 {
        if i % 3 == 0 {
            if i % 5 == 0 {
                print("FizzBuzz\n");
            } else {
                print("Fizz\n");
            }
        } else if i % 5 == 0 {
            print("Buzz\n");
        } else {
            print("Number\n");
        }
    }
}
