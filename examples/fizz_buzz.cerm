module examples::fizz_buzz;

import "std/os/linux.cerm";

// TODO: We don't support slices yet
fn strlen(str [*]const u8) usize {
    var len usize = 0;

    while str[len] != 0 {
        len = len + 1;
    }

    return len;
}

const STDOUT = 1;

fn printi(n u32) {
    if n > 9 {
        printi(n / 10);
        n = n % 10;
    }

    std::os::linux::write(STDOUT, &('0' + n) as usize, 1);
}

fn prints(str [*]const u8) {
    std::os::linux::write(STDOUT, str as usize, strlen(str));
}

fn main() {
    var i u32 = 0;

    while (i = i + 1) < 16 {
        if i % 3 == 0 {
            if i % 5 == 0 {
                prints("FizzBuzz\n");
            } else {
                prints("Fizz\n");
            }
        } else if i % 5 == 0 {
            prints("Buzz\n");
        } else {
            printi(i);
            prints("\n");
        }
    }
}
