std :: @import("../std.bq");
Os :: std.target.Os;

get_stdin_handle :: fn () std.fs.Handle {
    return switch @target_os {
        Os.linux => std.os.linux.STDIN,

        else => 0,
    };
}

get_stdout_handle :: fn () std.fs.Handle {
    return switch @target_os {
        Os.linux => std.os.linux.STDOUT,

        else => 0,
    };
}

get_stderr_handle :: fn () std.fs.Handle {
    return switch @target_os {
        Os.linux => std.os.linux.STDERR,

        else => 0,
    };
}

print :: fn (str : []const u8) {
    std.fs.write(get_stdout_handle(), str);
}

println :: fn (str : []const u8) {
    print(str);
    print("\n");
}

eprint :: fn (str : []const u8) {
    std.fs.write(get_stderr_handle(), str);
}

eprintln :: fn (str : []const u8) {
    eprint(str);
    eprint("\n");
}
